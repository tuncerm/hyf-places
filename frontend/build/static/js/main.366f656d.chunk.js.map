{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","UserPlaces","NewPlace","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","tokenExpires","Date","getTime","localStorage","setItem","JSON","stringify","userUd","expiration","removeItem","useEffect","storedData","parse","getItem","setTimeout","clearTimeout","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.366f656d.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import {useState, useCallback, useEffect} from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n    const [token, setToken] = useState(false);\n    const [tokenExpirationDate, setTokenExpirationDate] = useState();\n    const [userId, setUserId] = useState(null);\n  \n    const login = useCallback((uid, token, expirationDate) => {\n      setUserId(uid);\n      setToken(token);\n      const tokenExpires = expirationDate || new Date().getTime() + 60 * 60 * 1000;\n      setTokenExpirationDate(tokenExpires);\n      localStorage.setItem('userData', JSON.stringify({userUd: uid, token: token, expiration: tokenExpires}));\n    }, []);\n  \n    const logout = useCallback(() => {\n      setUserId(null);\n      setToken(null);\n      setTokenExpirationDate(null);\n      localStorage.removeItem('userData');\n    }, []);\n\n    useEffect(()=>{\n        const storedData = JSON.parse(localStorage.getItem('userData'));\n        if(storedData && storedData.token && storedData.expiration > new Date().getTime()){\n        login(storedData.userId, storedData.token);\n        }\n    }, [login]);\n\n    useEffect(()=>{\n        if(token && tokenExpirationDate){\n        logoutTimer = setTimeout(logout, tokenExpirationDate - new Date().getTime());\n        } else {\n        clearTimeout(logoutTimer);\n        }\n    }, [token, logout, tokenExpirationDate]);\n\n    return{userId, token, login, logout}\n}","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n  const {isLoggedIn, logout, userId} = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {isLoggedIn && (\n        <li>\n          <NavLink to={`/${userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {isLoggedIn && (\n        <li>\n          <button onClick={logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Suspense } from 'react';\nimport {BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\n\nconst Users = React.lazy(()=>import('./user/pages/Users'));\nconst UserPlaces = React.lazy(()=>import('./places/pages/UserPlaces'));\nconst NewPlace = React.lazy(()=>import('./places/pages/NewPlace'));\nconst UpdatePlace = React.lazy(()=>import('./places/pages/UpdatePlace'));\nconst Auth = React.lazy(()=>import('./user/pages/Auth'));\n\nconst App = () => {\n  const {userId, token, login, logout} = useAuth();\n\n  let routes;\n\n  if(token){\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider value={{isLoggedIn: !!token, token, userId, login, logout}}>\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense fallback={<div className=\"center\"><LoadingSpinner/></div>}>\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}