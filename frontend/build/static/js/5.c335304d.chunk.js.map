{"version":3,"sources":["shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/hooks/http-hook.js","shared/components/UIElements/Card.js","shared/components/UIElements/Modal.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","ErrorModal","onCancel","onClear","header","show","error","footer","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Card","style","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","mapboxgl","accessToken","process","Map","center","zoom","mapRef","container","lng","lat","ref","id","PlaceItem","auth","useContext","AuthContext","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","Authorization","token","onDelete","address","coordinates","LoadingSpinner","src","image","alt","title","description","isLoggedIn","userId","creatorId","PlaceList","items","length","map","place","key","creator","location","onDeletePlace","UserPlaces","places","setPlaces","useParams","fetchPlaces","pid","prev"],"mappings":"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","file":"static/js/5.c335304d.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import {useState, useCallback, useRef, useEffect} from 'react';\n\nexport const useHttpClient = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const activeHttpRequests = useRef([]);\n\n    const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n        try{\n            setIsLoading(true); \n            const httpAbortCtrl = new AbortController();\n            activeHttpRequests.current.push(httpAbortCtrl);\n            const response = await fetch(url, {\n                method,\n                body,\n                headers,\n                signal: httpAbortCtrl.signal\n            });\n            const responseData = await response.json();\n            activeHttpRequests.current = activeHttpRequests.current.filter(reqCtrl => reqCtrl !== httpAbortCtrl);\n            if(!response.ok){\n              throw new Error(responseData.message);\n            }\n            setIsLoading(false); \n            return responseData;\n        } catch (err){\n            setError(err.message);\n            setIsLoading(false); \n            throw err;\n        }\n    }, []);\n\n    const clearError = () => {\n        setError(null);\n    }\n\n    useEffect(()=> {\n        return () => {\n            activeHttpRequests.current.forEach(abortCtrl=>abortCtrl.abort());\n        };\n    }, []);\n\n    return {isLoading, error, sendRequest, clearError}\n}","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React, { useEffect, useRef } from 'react';\nimport mapboxgl from 'mapbox-gl';\n\nimport './Map.css';\n \nmapboxgl.accessToken = process.env.REACT_APP_MAP_KEY;\n\nconst Map = props => {\n  const { center, zoom } = props;\n  const mapRef = useRef();\n  useEffect(() => {\n    new mapboxgl.Map({\n      container: \"map\",\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [center.lng, center.lat], \n      zoom: zoom\n    });\n  }, [center, zoom]);\n \n  return (\n    <div\n      ref={mapRef}\n      className={`map ${props.className}`}\n      style={props.style}\n      id=\"map\"\n    ></div>\n  );\n};\n \nexport default Map;","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Map from '../../shared/components/UIElements/Map';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './PlaceItem.css';\n\nconst PlaceItem = props => {\n  const auth = useContext(AuthContext);\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openMapHandler = () => setShowMap(true);\n\n  const closeMapHandler = () => setShowMap(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try{\n      await sendRequest(`${process.env.REACT_APP_API_URL}/places/${props.id}`, 'DELETE', null, {Authorization: 'Bearer ' + auth.token});\n      props.onDelete(props.id);\n    } catch {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError}/>\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner/>}\n          <div className=\"place-item__image\">\n            <img src={props.image} alt={props.title} />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.isLoggedIn && auth.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n            {auth.isLoggedIn && auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>DELETE</Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport PlaceItem from './PlaceItem';\nimport Button from '../../shared/components/FormElements/Button';\nimport './PlaceList.css';\n\nconst PlaceList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map(place => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, {useEffect, useState} from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport {useHttpClient} from '../../shared/hooks/http-hook';\n\nconst UserPlaces = () => {\n  const [places, setPlaces] = useState([]);\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n  const userId = useParams().userId;\n\n  useEffect(()=>{\n    const fetchPlaces = async () => {\n      try{\n        const response = await sendRequest(`${process.env.REACT_APP_API_URL}/places/user/${userId}`);\n        setPlaces(response.places);\n      } catch {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = (pid) => {\n    setPlaces(prev => prev.filter(place => place.id !== pid));\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && <LoadingSpinner />}\n      {!isLoading && places && <PlaceList items={places} onDeletePlace={placeDeletedHandler}/>}\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n"],"sourceRoot":""}